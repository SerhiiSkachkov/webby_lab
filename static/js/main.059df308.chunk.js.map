{"version":3,"sources":["redux/reducer.js","components/Button/Button.jsx","components/Form-field/FormField.jsx","components/Loader/Loader.jsx","components/Alert/Alert.jsx","components/List-group/ListGroup.jsx","components/Pagination/Pagination.jsx","components/modals/Modal.jsx","components/modals/ModalInform.jsx","redux/actions.js","components/modals/ModalCreateMovie.jsx","redux/types.js","components/modals/ModalCreateExport.jsx","App.js","index.js"],"names":["initialState","isLoad","error","moviesSearchList","moviesList","Button","children","onClick","className","disabled","attrs","active","invert","Tag","href","FormField","id","type","label","name","classNameControl","classNameLabel","classNameWrapper","handleFieldChange","classNames","htmlFor","onChange","e","Loader","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Alert","onClose","ListGroup","items","length","map","item","key","title","Pagination","perPage","total","currentPage","pageNumbers","i","Math","ceil","push","number","modalRoot","document","getElementById","Modal","onCancel","onSubmit","isDisabled","submitBtnText","ReactDOM","createPortal","ModalInform","handleCancel","handleDelete","movie","release","format","stars","REACT_APP_FIREBASE_URL","process","INITIAL_STATE","ModalCreateMovie","dispatch","useDispatch","useState","formData","setFormData","target","value","handleReset","handleSubmit","resetForm","preventDefault","a","fetch","method","headers","Accept","body","JSON","stringify","response","json","payload","trim","rows","ModalCreateExport","fileData","setFileData","movies","icon","faFileExport","size","reader","FileReader","onload","PROPS","Title","Format","Stars","formatData","result","split","n","data","filter","Boolean","obj","readAsText","files","movieSelector","state","OPTIONS","OPTIONS_SEARCH","App","useSelector","setMovie","searchValue","setSearchValue","searchTag","setSearchTag","setCurrentPage","showCreateMovieModal","setShowCreateMovieModal","showFileExportModal","setShowFileExportModal","useEffect","Object","entries","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","placeholder","defaultValue","classNamePrefix","isSearchable","options","tag","faSearch","selectedOption","faPlusSquare","find","m","pageNumber","movieKey","closeModal","deleteMovie","library","add","fab","faCheckSquare","faCoffee","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","includes","sort","b","applyMiddleware","thunk","render"],"mappings":"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","file":"static/js/main.059df308.chunk.js","sourcesContent":["import {\r\n    GET_MOVIES,\r\n    DELETE_MOVIE,\r\n    SET_MOVIE,\r\n    SET_SORT,\r\n    SET_SEARCH\r\n} from './types';\r\n\r\nconst initialState = {\r\n    isLoad: true,\r\n    error: false,\r\n    moviesSearchList: null,\r\n    moviesList: []\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_MOVIES:\r\n            return {\r\n                ...state,\r\n                isLoad: false,\r\n                moviesList: payload.movies\r\n            };\r\n\r\n        case SET_MOVIE:\r\n            return {\r\n                ...state,\r\n                moviesList: [...state.moviesList, payload.movie]\r\n            };\r\n\r\n        case SET_SEARCH:\r\n            return {\r\n                ...state,\r\n                moviesSearchList: state.moviesList.filter(movie =>\r\n                    movie[payload.tag].includes(payload.value)\r\n                )\r\n            };\r\n\r\n        case SET_SORT:\r\n            return {\r\n                ...state,\r\n                moviesList: state.moviesList.sort((a, b) =>\r\n                    a[payload] > b[payload] ? 1 : -1\r\n                )\r\n            };\r\n\r\n        case DELETE_MOVIE:\r\n            return {\r\n                ...state,\r\n                moviesList: state.moviesList.filter(\r\n                    m => m.key !== payload.movieKey\r\n                )\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\n\r\nimport './Button.sass';\r\n\r\nconst Button = ({\r\n    children,\r\n    onClick,\r\n    className,\r\n    disabled,\r\n    active,\r\n    invert,\r\n    ...attrs\r\n}) => {\r\n    const Tag = attrs.href ? 'a' : 'button';\r\n\r\n    return (\r\n        <Tag\r\n            className={className}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n            {...attrs}\r\n        >\r\n            {children}\r\n        </Tag>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './FormField.sass';\r\n\r\nconst FormField = ({\r\n    id,\r\n    type,\r\n    label,\r\n    name,\r\n    classNameControl,\r\n    classNameLabel,\r\n    classNameWrapper,\r\n    handleFieldChange,\r\n    ...attrs\r\n}) => {\r\n    return (\r\n        <div className={classNames('form-field-wrapper', classNameWrapper)}>\r\n            {label && (\r\n                <label\r\n                    className={classNames('form-field-label', classNameLabel)}\r\n                    htmlFor={id}\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            {type === 'textarea' ? (\r\n                <textarea\r\n                    className={classNames(\r\n                        'form-field-control',\r\n                        classNameControl\r\n                    )}\r\n                    id={id}\r\n                    name={name}\r\n                    {...attrs}\r\n                    onChange={e => handleFieldChange(e)}\r\n                />\r\n            ) : (\r\n                <input\r\n                    id={id}\r\n                    type={type}\r\n                    name={name}\r\n                    onChange={e => handleFieldChange(e)}\r\n                    className={classNames(\r\n                        'form-field-control',\r\n                        classNameControl\r\n                    )}\r\n                    {...attrs}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormField;\r\n","import React from 'react';\r\n\r\nimport './Loader.sass';\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"loader-img\">\r\n                <svg\r\n                    aria-hidden=\"true\"\r\n                    focusable=\"false\"\r\n                    data-prefix=\"fas\"\r\n                    data-icon=\"spinner\"\r\n                    className=\"svg-inline--fa fa-spinner fa-w-16\"\r\n                    role=\"img\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 512 512\"\r\n                >\r\n                    <path\r\n                        fill=\"#007bff\"\r\n                        d=\"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"\r\n                    ></path>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nimport './Alert.sass';\r\n\r\nconst Alert = ({ onClose, children, className }) => {\r\n    return (\r\n        <div className={className}>\r\n            {children}\r\n            {onClose && (\r\n                <button type=\"button\" className=\"alert-close\" onClick={onClose}>\r\n                    <span>&times;</span>\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport Alert from '../Alert/Alert';\r\n\r\nimport './ListGroup.sass';\r\n\r\nconst ListGroup = ({ onClick, items, isLoad }) => {\r\n    if (isLoad) return <Loader />;\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.length > 0 ? (\r\n                items.map(item => (\r\n                    <li\r\n                        key={item.key}\r\n                        className=\"list-group-item\"\r\n                        onClick={() => onClick(item.key)}\r\n                    >\r\n                        {item.title}\r\n                    </li>\r\n                ))\r\n            ) : (\r\n                <Alert className=\"alert alert-text-center alert-warning\">\r\n                    <p>Список пуст</p>\r\n                </Alert>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Pagination.sass';\r\n\r\nconst Pagination = ({ perPage, total, onClick, currentPage }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(total.length / perPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    if (pageNumbers.length === 1) return null;\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"pagination-item\">\r\n                        <button\r\n                            onClick={() => onClick(number)}\r\n                            className={classNames(\r\n                                'pagination-link',\r\n                                number === currentPage && 'active'\r\n                            )}\r\n                        >\r\n                            {number}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '../Button/Button';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nconst Modal = ({\r\n    title,\r\n    onCancel,\r\n    children,\r\n    onSubmit,\r\n    isDisabled,\r\n    submitBtnText\r\n}) => {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-window\">\r\n                <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\">{title}</h3>\r\n                    <span className=\"modal-close\" onClick={onCancel}>\r\n                        &times;\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal-body\">{children}</div>\r\n                <div className=\"modal-footer\">\r\n                    <Button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={onSubmit}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        {submitBtnText}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        modalRoot\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\n\r\nimport './Modal.sass';\r\n\r\nconst ModalInform = ({\r\n    handleCancel,\r\n    handleDelete,\r\n    movie: { title, release, format, stars, key }\r\n}) => {\r\n    return (\r\n        <Modal\r\n            title={title}\r\n            onCancel={handleCancel}\r\n            onSubmit={() => handleDelete(key)}\r\n            submitBtnText=\"Удалить\"\r\n        >\r\n            <div>\r\n                <div>Год: {release || 'не заполнено'}</div>\r\n                <div>Формат: {format || 'не заполнено'}</div>\r\n                <div>Актеры: {stars || 'не заполнено'}</div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalInform;\r\n","import {\r\n    GET_MOVIES,\r\n    SET_MOVIE,\r\n    DELETE_MOVIE,\r\n    SET_SORT,\r\n    SET_SEARCH\r\n} from './types';\r\n\r\nconst { REACT_APP_FIREBASE_URL } = process.env;\r\n\r\nexport const getMovies = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(\r\n                `${REACT_APP_FIREBASE_URL}/movies_information.json`\r\n            );\r\n            const movies = await response.json();\r\n\r\n            dispatch({\r\n                type: GET_MOVIES,\r\n                payload: {\r\n                    movies: Object.entries(movies).map(([key, movie]) => ({\r\n                        ...movie,\r\n                        key\r\n                    }))\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n};\r\n\r\nexport const setSort = sort => {\r\n    return { type: SET_SORT, payload: sort };\r\n};\r\n\r\nexport const setSearch = (value, tag) => {\r\n    return {\r\n        type: SET_SEARCH,\r\n        payload: {\r\n            value,\r\n            tag\r\n        }\r\n    };\r\n};\r\n\r\nexport const setMovie = (movie, resetForm) => {\r\n    return async dispatch => {\r\n        const response = await fetch(\r\n            `${REACT_APP_FIREBASE_URL}/movies_information.json`,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(movie)\r\n            }\r\n        );\r\n        const { name } = await response.json();\r\n\r\n        dispatch({\r\n            type: SET_MOVIE,\r\n            payload: { movie: { ...movie, key: name } }\r\n        });\r\n        resetForm();\r\n    };\r\n};\r\n\r\nexport const setFileMovie = movies => {\r\n    return async dispatch => {\r\n        for (let movie of movies) {\r\n            const response = await fetch(\r\n                `${REACT_APP_FIREBASE_URL}/movies_information.json`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(movie)\r\n                }\r\n            );\r\n            const { name } = await response.json();\r\n\r\n            dispatch({\r\n                type: SET_MOVIE,\r\n                payload: { movie: { ...movie, key: name } }\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteMovie = (movieKey, closeModal) => {\r\n    return async dispatch => {\r\n        const response = await fetch(\r\n            `${REACT_APP_FIREBASE_URL}/movies_information/${movieKey}.json`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        );\r\n\r\n        await response.json();\r\n        dispatch({\r\n            type: DELETE_MOVIE,\r\n            payload: { movieKey }\r\n        });\r\n        closeModal();\r\n    };\r\n};\r\n","import React, { useState } from 'react';\r\nimport Modal from './Modal';\r\nimport FormField from '../Form-field/FormField';\r\nimport { setMovie } from '../../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './Modal.sass';\r\n\r\nconst INITIAL_STATE = {\r\n    title: '',\r\n    release: '',\r\n    stars: '',\r\n    format: ''\r\n};\r\n\r\nconst ModalCreateMovie = ({ handleCancel }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n    const handleFieldChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const handleReset = () => setFormData(INITIAL_STATE);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(setMovie(formData, handleReset));\r\n        handleCancel();\r\n    };\r\n\r\n    const { title, format, stars, release } = formData;\r\n\r\n    const isDisabled =\r\n        !title.trim() || !release.trim() || !stars.trim() || !format.trim();\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Создайте заметку\"\r\n            onCancel={handleCancel}\r\n            onSubmit={handleSubmit}\r\n            isDisabled={isDisabled}\r\n            submitBtnText=\"Создать\"\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <FormField\r\n                    label=\"Фильм\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    type=\"text\"\r\n                    handleFieldChange={handleFieldChange}\r\n                />\r\n                <FormField\r\n                    label=\"Год\"\r\n                    name=\"release\"\r\n                    type=\"number\"\r\n                    value={release}\r\n                    handleFieldChange={handleFieldChange}\r\n                />\r\n                <FormField\r\n                    label=\"Формат\"\r\n                    name=\"format\"\r\n                    type=\"text\"\r\n                    value={format}\r\n                    handleFieldChange={handleFieldChange}\r\n                />\r\n                <FormField\r\n                    label=\"Актеры\"\r\n                    name=\"stars\"\r\n                    type=\"textarea\"\r\n                    value={stars}\r\n                    rows=\"5\"\r\n                    handleFieldChange={handleFieldChange}\r\n                />\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalCreateMovie;\r\n","export const GET_MOVIES = 'LOAD_MOVIES';\r\nexport const SET_MOVIE = 'SET_MOVIE';\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\r\nexport const SET_SORT = 'SET_SORT';\r\nexport const SET_SEARCH = 'SET_SEARCH';\r\n","import React, { useState } from 'react';\r\nimport FormField from '../Form-field/FormField';\r\nimport Modal from './Modal';\r\n\r\nimport { setFileMovie } from '../../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileExport } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Modal.sass';\r\n\r\nconst ModalCreateExport = ({ handleCancel }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [fileData, setFileData] = useState(null);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(setFileMovie(fileData));\r\n        handleCancel();\r\n    };\r\n\r\n    const handleLoadFile = e => {\r\n        e.preventDefault();\r\n        const reader = new FileReader();\r\n        reader.onload = e => {\r\n            const PROPS = {\r\n                Title: 'title',\r\n                Format: 'format',\r\n                Stars: 'stars',\r\n                'Release Year': 'release'\r\n            };\r\n\r\n            const formatData = e.target.result.split('\\n\\r').map(n => {\r\n                const data = n.split(/\\n/).filter(Boolean);\r\n                const obj = {};\r\n\r\n                for (const str of data) {\r\n                    const [key, value] = str.split(': ');\r\n\r\n                    obj[PROPS[key]] = value;\r\n                }\r\n                return obj;\r\n            });\r\n            setFileData(formatData);\r\n        };\r\n        reader.readAsText(e.target.files[0]);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Создайте заметку из вашего файла.\"\r\n            onCancel={handleCancel}\r\n            onSubmit={handleSubmit}\r\n            isDisabled={!fileData}\r\n            submitBtnText=\"Отправить\"\r\n        >\r\n            <ul>\r\n                <li>1.Фаил должен содержать расширене .txt.</li>\r\n                <li>\r\n                    2. Иметь 4 обязательных поля Title, Release Year, Format,\r\n                    Stars.\r\n                </li>\r\n                <li>\r\n                    3. Каждая отдельная информация о фильме разделяется\r\n                    дополнительным переводом строки \"Enter\".\r\n                </li>\r\n                <li>4.В случае отстутствия информации оставте пробел.</li>\r\n            </ul>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormField\r\n                    classNameLabel=\"form-field-label--file\"\r\n                    classNameControl=\"form-field-control--file\"\r\n                    id=\"fileExport\"\r\n                    label={\r\n                        <>\r\n                            <FontAwesomeIcon icon={faFileExport} size=\"lg\" />\r\n                            Загрузить\r\n                        </>\r\n                    }\r\n                    type=\"file\"\r\n                    onChange={handleLoadFile}\r\n                />\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalCreateExport;\r\n","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faFileExport,\n    faPlusSquare,\n    faSearch\n} from '@fortawesome/free-solid-svg-icons';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Button from './components/Button/Button';\nimport FormField from './components/Form-field/FormField';\nimport ListGroup from './components/List-group/ListGroup';\nimport Pagination from './components/Pagination/Pagination';\nimport ModalInform from './components/modals/ModalInform';\nimport ModalCreateMovie from './components/modals/ModalCreateMovie';\nimport ModalCreateExport from './components/modals/ModalCreateExport';\n\nimport { getMovies, deleteMovie, setSort, setSearch } from './redux/actions';\nimport './App.sass';\n\nconst movieSelector = state => ({\n    moviesList: state.moviesList,\n    moviesSearchList: state.moviesSearchList,\n    isLoad: state.isLoad\n});\n\nconst OPTIONS = [\n    { value: 'key', label: 'Выкл' },\n    { value: 'title', label: 'Имя' },\n    { value: 'stars', label: 'Актеры' }\n];\n\nconst OPTIONS_SEARCH = [\n    { value: 'title', label: 'Имя' },\n    { value: 'stars', label: 'Актеры' }\n];\n\nconst PER_PAGE = 10;\n\nconst App = () => {\n    const dispatch = useDispatch();\n\n    const { moviesList, isLoad, moviesSearchList } = useSelector(movieSelector);\n\n    const [movie, setMovie] = useState(null);\n    const [searchValue, setSearchValue] = useState('');\n    const [searchTag, setSearchTag] = useState('title');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [showCreateMovieModal, setShowCreateMovieModal] = useState(false);\n    const [showFileExportModal, setShowFileExportModal] = useState(false);\n\n    useEffect(() => {\n        dispatch(getMovies());\n    }, []);\n\n    const indexOfLastPost = currentPage * PER_PAGE;\n    const indexOfFirstPost = indexOfLastPost - PER_PAGE;\n    const currentPosts = (moviesSearchList || moviesList).slice(\n        indexOfFirstPost,\n        indexOfLastPost\n    );\n\n    const handleModalOpen = key =>\n        setMovie(moviesList.find(m => m.key === key));\n\n    const handleDeleteMovie = movieKey =>\n        dispatch(deleteMovie(movieKey, () => setMovie(null)));\n\n    const handlePaginate = pageNumber => setCurrentPage(pageNumber);\n\n    const handleSelectSortChange = selectedOption => {\n        dispatch(setSort(selectedOption.value));\n    };\n\n    const handleSearchSubmit = () => {\n        setCurrentPage(1);\n        dispatch(setSearch(searchValue, searchTag));\n    };\n\n    return (\n        <div className=\"app-wrapper\">\n            <header className=\"header\">header</header>\n            <main className=\"main\">\n                <div className=\"wrapper\">\n                    <div className=\"search-form\">\n                        <FormField\n                            type=\"search\"\n                            placeholder=\"Search\"\n                            classNameWrapper=\"search-form-field-wrapper\"\n                            onChange={e => setSearchValue(e.target.value)}\n                        />\n\n                        <Select\n                            defaultValue={OPTIONS_SEARCH[0]}\n                            placeholder=\"Поиск\"\n                            classNamePrefix=\"search-form-select\"\n                            isSearchable={false}\n                            onChange={e => setSearchTag(e.value)}\n                            options={OPTIONS_SEARCH}\n                        />\n\n                        <Button\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                            onClick={handleSearchSubmit}\n                        >\n                            <FontAwesomeIcon icon={faSearch} />\n                        </Button>\n                    </div>\n\n                    <div className=\"page-controls\">\n                        <div className=\"page-controls-wrapper\">\n                            <Select\n                                defaultValue={OPTIONS[0]}\n                                placeholder=\"Cортировка\"\n                                classNamePrefix=\"page-controls-select\"\n                                isSearchable={false}\n                                onChange={handleSelectSortChange}\n                                options={OPTIONS}\n                            />\n\n                            <Button\n                                className=\"btn btn-primary\"\n                                onClick={() => setShowFileExportModal(true)}\n                            >\n                                <FontAwesomeIcon icon={faFileExport} />\n                            </Button>\n\n                            <Button\n                                className=\"btn btn-primary\"\n                                onClick={() => setShowCreateMovieModal(true)}\n                            >\n                                <FontAwesomeIcon icon={faPlusSquare} />\n                            </Button>\n                        </div>\n                    </div>\n\n                    <ListGroup\n                        isLoad={isLoad}\n                        items={currentPosts}\n                        onClick={handleModalOpen}\n                    />\n\n                    <Pagination\n                        currentPage={currentPage}\n                        perPage={PER_PAGE}\n                        total={moviesSearchList || moviesList}\n                        onClick={handlePaginate}\n                    />\n                </div>\n            </main>\n\n            <footer className=\"header\">foter </footer>\n\n            {movie && (\n                <ModalInform\n                    handleCancel={() => setMovie(null)}\n                    handleDelete={handleDeleteMovie}\n                    movie={movie}\n                />\n            )}\n            {showCreateMovieModal && (\n                <ModalCreateMovie\n                    handleCancel={() => setShowCreateMovieModal(false)}\n                />\n            )}\n            {showFileExportModal && (\n                <ModalCreateExport\n                    handleCancel={() => setShowFileExportModal(false)}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { reducer } from './redux/reducer';\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport App from './App';\nimport './index.sass';\n\nlibrary.add(fab, faCheckSquare, faCoffee);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}